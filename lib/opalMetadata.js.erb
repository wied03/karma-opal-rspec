<%=
require 'opal/rspec'
require 'json'

map_assets = lambda do |assets, watch, roll_up=false|
  assets.inject({}) do |result, asset|
    main_asset = environment.find_asset(asset)
    assets = [main_asset]
    dependencies = main_asset.included.map { |dep| environment.find_asset(dep) }
    assets += dependencies unless roll_up
    as_array = assets.uniq.map do |dep_asset|
      [
          dep_asset.filename,
          {
              logical_path: dep_asset.logical_path,
              watch: watch
          }
      ]
    end
    result.merge! Hash[as_array]
  end
end

get_full_paths = %w{opal opal-rspec}
internal_paths = %w{karma_formatter}
opal_rspec_paths = map_assets[get_full_paths, watch=false, roll_up=true]
internal_paths = map_assets[internal_paths, watch=false]
tests = map_assets[environment.get_opal_spec_requires, watch=true]
result = opal_rspec_paths.merge(internal_paths).merge(tests)

result.to_json
%>
